'use client'
import { useState, useEffect } from 'react'
import Link from 'next/link'

export default function ProductoDetalle({ params }) {
  const [producto, setProducto] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    const id = params.id
    
    fetch(`https://bsale-proxy.vercel.app/api/bsale/products/${id}.json`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          setProducto(data.data)
        } else {
          setError('Error al cargar el producto')
        }
        setLoading(false)
      })
      .catch(err => {
        setError('Error de conexion: ' + err.message)
        setLoading(false)
      })
  }, [params.id])

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-xl">Cargando producto...</div>
      </div>
    )
  }

  if (error || !producto) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="text-xl text-red-600 mb-4">{error || 'Producto no encontrado'}</div>
          <Link href="/" className="text-blue-600 hover:text-blue-800">
            Volver al catalogo
          </Link>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto">
        <Link 
          href="/" 
          className="inline-flex items-center text-blue-600 hover:text-blue-800 mb-6"
        >
          ‚Üê Volver al catalogo
        </Link>

        <div className="bg-white rounded-lg shadow-lg p-8">
          <div className="flex justify-between items-start mb-6">
            <h1 className="text-3xl font-bold text-gray-900">
              {producto.name}
            </h1>
            <span className={`px-3 py-1 text-sm rounded-full ${
              producto.state === 1 
                ? 'bg-green-100 text-green-800' 
                : 'bg-red-100 text-red-800'
            }`}>
              {producto.state === 1 ? 'Activo' : 'Inactivo'}
            </span>
          </div>

          {producto.description && (
            <div className="mb-6">
              <h2 className="text-lg font-semibold text-gray-700 mb-2">Descripcion</h2>
              <p className="text-gray-600">{producto.description}</p>
            </div>
          )}

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h2 className="text-lg font-semibold text-gray-700">Informacion General</h2>
              
              <div className="space-y-2">
                <div className="flex justify-between py-2 border-b">
                  <span className="text-gray-600">ID:</span>
                  <span className="font-medium">{producto.id}</span>
                </div>

                <div className="flex justify-between py-2 border-b">
                  <span className="text-gray-600">Control de Stock:</span>
                  <span className={`px-2 py-1 text-xs rounded ${
                    producto.stockControl === 1 
                      ? 'bg-blue-100 text-blue-800' 
                      : 'bg-gray-100 text-gray-800'
                  }`}>
                    {producto.stockControl === 1 ? 'Si' : 'No'}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}